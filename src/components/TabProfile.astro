---
import { getEntry } from 'astro:content';
const cl = Astro.currentLocale;
const label = await getEntry('labels', `${cl}/labels`);
const { user } = Astro.locals;

async function getUserProfile() {
     const { databases } = createServices();
     const user_profile = await databases.getDocument(
        '67093d67002873e2c459',
        '67254b050023f2b7dd7d',
        user.$id);
    return user_profile
    }
const user_profile = await getUserProfile();

---
<div class="h-full group p-6 sm:p-8 bg-white border border-gray-200/50 dark:shadow-none dark:border-gray-700 dark:bg-gray-800 bg-opacity-90 shadow-2xl shadow-gray-600/10">
    <form method="POST" id="updateForm">
    <table class="mt-6 -mb-2 w-full text-gray-600 dark:text-gray-300">
        <tbody>
            <tr>
                <td></td>
                <td class="text-right">                 
                    <input type="hidden" name="form" value="update">
                    <button id="update_button" type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 ">{labelEntry.data.update_account}</button>
                </td>  
              </tr>
          <tr>
          <tr>
            <td class="py-2">Newsletter</td>
            <td>
               <input id="newsletter" name="newsletter" type="checkbox" value="on" checked={user_profile.newsletter}>
            </td>
          </tr>
          <tr>
            <td class="py-2">{labelEntry.data.profile_zip}</td>
            <td class="text-gray-500">
                <input id="zip" name="zip" class="appearance-none block w-1/3 bg-gray-200 text-gray-700  py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"  type="number" min="1000" max="9999" step="1" value={user_profile.zip}>  
                </td>
          </tr>
        </tbody>
    </table>
    </form>
</div>